on: [ push ]

name: Release

jobs:
  create_release:
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

  release_assets:
    needs: create_release
    runs-on: ${{ matrix.config.os }}

    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: "https://npm.pkg.github.com"

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - run: npm ci

      - run: npm run build

      - run: tar -a -c -f out.zip native/index.node lib/* package.json

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: game-scan.${{ github.ref }}-${{ runner.os }}.zip
          asset_path: ./out.zip
          asset_content_type: application/octet-stream